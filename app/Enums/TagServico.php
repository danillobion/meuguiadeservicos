<?php

namespace App\Enums;

enum TagServico: string
{
    case ELETRICISTA = 'ELETRICISTA';
    case ENCANADOR = 'ENCANADOR';
    case MARCENEIRO = 'MARCENEIRO';
    case PEDREIRO = 'PEDREIRO';
    case JARDINEIRO = 'JARDINEIRO';
    case DIARISTA = 'DIARISTA';
    case CUIDADOR_IDOSO = 'CUIDADOR_IDOSO';
    case BABA = 'BABA';
    case MOTORISTA = 'MOTORISTA';
    case PERSONAL_TRAINER = 'PERSONAL_TRAINER';
    case AULAS_PARTICULARES = 'AULAS_PARTICULARES';
    case DESIGN_GRAFICO = 'DESIGN_GRAFICO';
    case PROGRAMADOR = 'PROGRAMADOR';
    case FREELANCER_ADMINISTRATIVO = 'FREELANCER_ADMINISTRATIVO';
    case MAQUIADOR = 'MAQUIADOR';
    case CABELEIREIRO_DOMICILIO = 'CABELEIREIRO_DOMICILIO';
    case MANUTENCAO_COMPUTADOR = 'MANUTENCAO_COMPUTADOR';
    case ASSISTENCIA_TECNICA = 'ASSISTENCIA_TECNICA';
    case LIMPADOR_PISCINA = 'LIMPADOR_PISCINA';
    case ORGANIZADOR_EVENTOS = 'ORGANIZADOR_EVENTOS';
    case GARCOM_FREELANCER = 'GARCOM_FREELANCER';
    case DJ = 'DJ';
    case SEGURANCA_EVENTOS = 'SEGURANCA_EVENTOS';
    case CONSULTOR_FINANCEIRO = 'CONSULTOR_FINANCEIRO';
    case ADVOGADO = 'ADVOGADO';
    case CONTADOR = 'CONTADOR';
    case REPAROS_GERAIS = 'REPAROS_GERAIS';
    case MONTADOR_MOVEIS = 'MONTADOR_MOVEIS';
    case PASSEADOR_CAES = 'PASSEADOR_CAES';
    case TREINADOR_CAES = 'TREINADOR_CAES';
    case MASSOTERAPEUTA = 'MASSOTERAPEUTA';
    case NUTRICIONISTA = 'NUTRICIONISTA';
    case PSICOLOGO = 'PSICOLOGO';
    case TRADUTOR = 'TRADUTOR';
    case REVISOR_TEXTOS = 'REVISOR_TEXTOS';
    case VIDEOMAKER = 'VIDEOMAKER';
    case SOCIAL_MEDIA = 'SOCIAL_MEDIA';
    case CONSULTOR_IMAGEM = 'CONSULTOR_IMAGEM';
    case MARCENEIRO_PLANEJADO = 'MARCENEIRO_PLANEJADO';
    case VIDRACEIRO = 'VIDRACEIRO';
    case SERRALHEIRO = 'SERRALHEIRO';
    case COSTUREIRA = 'COSTUREIRA';
    case TECNICO_CELULAR = 'TECNICO_CELULAR';
    case TECNICO_INFORMATICA = 'TECNICO_INFORMATICA';
    case ELETRICISTA_AUTO = 'ELETRICISTA_AUTO';
    case GUINCHO = 'GUINCHO';
    case ENFERMEIRO_DOMICILIAR = 'ENFERMEIRO_DOMICILIAR';
    case MAESTRO_EVENTOS = 'MAESTRO_EVENTOS';
    case INSTALADOR_AR_CONDICIONADO = 'INSTALADOR_AR_CONDICIONADO';
    case INSTALADOR_CFTV = 'INSTALADOR_CFTV';
    case PINTOR = 'PINTOR';
    case ZELADOR = 'ZELADOR';
    case FAXINEIRA_EMPRESA = 'FAXINEIRA_EMPRESA';
    case LAVADOR_CARROS = 'LAVADOR_CARROS';
    case MOTOBOY = 'MOTOBOY';
    case ENTREGADOR = 'ENTREGADOR';
    case FOTOGRAFO = 'FOTOGRAFO';
    case CAMERAMAN = 'CAMERAMAN';
    case ILUSTRADOR = 'ILUSTRADOR';
    case ENCANADOR_INDUSTRIAL = 'ENCANADOR_INDUSTRIAL';
    case COZINHEIRA_DOMESTICA = 'COZINHEIRA_DOMESTICA';
    case CHEF_COZINHA = 'CHEF_COZINHA';
    case DECORADOR_INTERIORES = 'DECORADOR_INTERIORES';
    case ENGENHEIRO_CIVIL = 'ENGENHEIRO_CIVIL';
    case ARQUITETO = 'ARQUITETO';
    case TECNICO_REDE = 'TECNICO_REDE';
    case SUPORTE_TI = 'SUPORTE_TI';
    case BARBEIRO = 'BARBEIRO';
    case TATUADOR = 'TATUADOR';
    case ESTETICISTA = 'ESTETICISTA';
    case MANICURE_PEDICURE = 'MANICURE_PEDICURE';
    case DEPILADOR = 'DEPILADOR';
    case COACH_CARREIRA = 'COACH_CARREIRA';
    case CONSULTOR_NEGOCIOS = 'CONSULTOR_NEGOCIOS';
    case REDATOR = 'REDATOR';
    case LOCUTOR = 'LOCUTOR';
    case PALESTRANTE = 'PALESTRANTE';
    case ACOMPANHANTE_HOSPITALAR = 'ACOMPANHANTE_HOSPITALAR';
    case MONITOR_TRANSPORTE_ESCOLAR = 'MONITOR_TRANSPORTE_ESCOLAR';
    case INSTRUTOR_MUSICA = 'INSTRUTOR_MUSICA';
    case INSTRUTOR_IDIOMAS = 'INSTRUTOR_IDIOMAS';
    case PROFESSOR_REFREFORCO = 'PROFESSOR_REFREFORCO';
    case PREPARADOR_CONCURSOS = 'PREPARADOR_CONCURSOS';
    case MESTRE_OBRAS = 'MESTRE_OBRAS';
    case AZULEJISTA = 'AZULEJISTA';
    case GESSEIRO = 'GESSEIRO';
    case MARCENEIRO_ARTESANAL = 'MARCENEIRO_ARTESANAL';
    case TAPECEIRO = 'TAPECEIRO';
    case RELOJOEIRO = 'RELOJOEIRO';
    case SINTONIZADOR_ANTENAS = 'SINTONIZADOR_ANTENAS';
    case APLICADOR_PELICULA = 'APLICADOR_PELICULA';
    case MECANICO_BICICLETAS = 'MECANICO_BICICLETAS';
    case MECANICO_MOTOS = 'MECANICO_MOTOS';

    public function label(): string
    {
        return str_replace('_', ' ', ucwords(strtolower($this->value), '_'));
    }

    public static function toSelect(): array
    {
        return array_map(fn($tag) => [
            'value' => $tag->value,
            'label' => $tag->label(),
        ], self::cases());
    }
}
